#!/usr/bin/python3

# Python Script to make a web request to a target URL and print the responses with the capability to use a proxy
# This is a script that can send one off requests to a target URL and print the responses great for testing web apps
# and APIs. It can also be used as a manual fuzzing tool. 
#
# Creator: Parrotassassin15 - You may need to edit this as needed. 

import requests
from colorama import Fore, Back, Style

# Disable warnings for insecure requests
requests.packages.urllib3.disable_warnings(requests.packages.urllib3.exceptions.InsecureRequestWarning)

def make_pretty(title, item):
    cr = '\r\n'
    section_break = cr + "*" * 20 + cr
    item = str(item)
    text = Style.BRIGHT + Fore.RED + title + Fore.RESET + section_break + item + section_break 
    return text 

def get_url():
    url = input("Target Url: ")
    if not url.startswith(('http://', 'https://')):
        url = 'http://' + url  # Default to HTTP if no schema is provided
    return url

def use_proxy():
    choice = input("Do you want to use a proxy? (yes/no): ").strip().lower()
    return choice == 'yes'

def main():
    url = get_url()
    proxies = None
    if use_proxy():
        proxies = {'http': 'http://127.0.0.1:8080', 'https': 'https://127.0.0.1:8080'}

    try:
        response = requests.get(url, verify=False, proxies=proxies)
        print(make_pretty('Status Code Is:', response.status_code))
        print(make_pretty('Headers Are:', response.headers))
        print(make_pretty('Cookies Are:', response.cookies))
        # Uncomment the next line if you want to print the response body
        # print(make_pretty('Response Is:', response.text))
    except requests.exceptions.RequestException as e:
        print(f"Error: {e}")

if __name__ == "__main__":
    main()


